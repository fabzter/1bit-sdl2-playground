# Main scene file for our game
[[entities]]
name = "CRATE"

  [entities.components.Transform]
  position = [100.0, 64.0]
  scale = [2.0,  2.0]

  [entities.components.Sprite]
  assetId = "player"
  isAnimated = true
  sortingLayer = 0      # 0 is our 'world' or 'player' layer
  orderInLayer = 9

  [entities.components.Collider]
  size = [14.0, 14.0]
  offset = [0.0, 0.0]
  layer = 1
  mask = 3 #collides with WORLD (1) and PLAYER (2)

[entities.components.RigidBody]
  bodyType = "DYNAMIC"
  mass = 10.0 #heavier than the player
  restitution = 0.2 #not very bouncy
  damping = 0.9

[[entities]]
name = "Coin"
  [entities.components.Transform]
  position = [40.0, 40.0]
  scale = [2.0, 2.0]

  [entities.components.Sprite]
  assetId = "player"# We'll reuse the player sprite for now
  isAnimated = true
  sortingLayer = 0      # 0 is our 'world' or 'player' layer
  orderInLayer = 5

  [entities.components.Collider]
  size = [10.0, 10.0]
  offset = [0.0, 0.0]
  layer = 1
  mask = 2
  is_static = true
  is_trigger = true

  [entities.components.Behavior]
  type = "collectible"

[[entities]]
name = "World"
  [entities.components.Tilemap]
  mapFile = "res/maps/level1.tmx"

[[entities]]
name = "Player"

  [entities.components.StateMachine]
  initial_state = "idle"

  # ---- TRANSITIONS TABLE ----
  [[entities.components.StateMachine.transitions]]
  from = "idle"
  to = "walk"
  [[entities.components.StateMachine.transitions.conditions]]
  key = "isMoving"
  value = true

  [[entities.components.StateMachine.transitions]]
  from = "walk"
  to = "idle"
  [[entities.components.StateMachine.transitions.conditions]]
  key = "isMoving"
  value = false
# ------------------------------------

    [entities.components.StateMachine.states.idle]
    type = "simple"
    animation = "idle"

    [entities.components.StateMachine.states.walk]
    type = "simple"
    animation = "walk"

  [entities.components.Transform]
  position = [80.0, 64.0]
  scale = [2.0, 2.0]

  [entities.components.RigidBody] # This component marks the entity for processing by the physics and collision systems.
  bodyType = "KINEMATIC"
  mass = 1.0
  restitution = 0.5
  damping = 0.9

  [entities.components.Collider]
  size = [10.0, 14.0]  # The size of the collision box in local sprite units.
  offset = [0.0, 0.0]  # An offset from the transform's position.
  layer = 2            # The player is on the "PLAYER" layer (2^1).
  mask = 1             # The player collides with the "WORLD" layer (2^0).
  is_static = false
  is_trigger = false

  [entities.components.Sprite]
  assetId = "player"
  isAnimated = true
  sortingLayer = 0      # 0 is our 'world' or 'player' layer
  orderInLayer = 10     # A value to sort within the layer

  [entities.components.PlayerControl]
  # Tag component

  [entities.components.Movement]
  speed = 200.0

  [entities.components.Intent]
  # Tag component

  [entities.components.StateMachine]
  initial_state = "idle"

  [entities.components.StateMachine.states.idle]
  type = "simple"
  animation = "idle"

  [entities.components.StateMachine.states.walk]
  type = "simple"
  animation = "walk"

  # ---- ADD THIS TRANSITIONS TABLE ----
  [[entities.components.StateMachine.transitions]]
  from = "idle"
  to = "walk"
  [[entities.components.StateMachine.transitions.conditions]]
  key = "isMoving"
  value = true

  [[entities.components.StateMachine.transitions]]
  from = "walk"
  to = "idle"
  [[entities.components.StateMachine.transitions.conditions]]
  key = "isMoving"
  value = false

  [entities.components.Blackboard]
  # Empty for now, will be populated by systems
# ------------------------------------

[[entities]]
name = "Camera"

  [entities.components.Transform]
  # Initial position doesn't matter, will be snapped to target.
  position = [0.0, 0.0]

  [entities.components.Camera]
  # Tag component

  [entities.components.Blackboard]
  cameraTarget = "Player" # Reference by name
  followSpeed = 12.0
  deadZoneRadius = 2.0
